applications:
    app:
        # The runtime the application uses.
        type: php:8.3
        # Specify additional PHP extensions that should be loaded.
        runtime:
            extensions:
                - xsl
                - sodium
                - redis
        # Configuration of the build of this application.
        build:
            flavor: none
        dependencies:
            php:
                composer/composer: '^2'
        # The relationships of the application with services or other applications.
        #
        # The left-hand side is the name of the relationship as it will be exposed
        # to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand
        # side is in the form `<service name>:<endpoint name>`.
        relationships:
            database: db:mysql
            redis: cache:redis
            redis-session: session:redis
            opensearch: indexer:opensearch
            rabbitmq: queue:rabbitmq
        # The 'mounts' describe writable, persistent filesystem mounts in the application.
        mounts:
            "/var":
                source: storage
                source_path: "var"
            "/app/etc":
                source: storage
                source_path: "etc"
            "/pub/media":
                source: storage
                source_path: "media"
            "/pub/static":
                source: storage
                source_path: "static"
        # The hooks executed at various points in the lifecycle of the application.
        hooks:
            build: |
                set -e
                composer install --no-dev --no-interaction
                php ./vendor/bin/ece-tools build:generate
                php ./vendor/bin/ece-tools build:transfer
            deploy: |
                set -e
                php ./vendor/bin/ece-tools deploy
            post_deploy: |
                set -e
                php ./vendor/bin/ece-tools post-deploy
        # The configuration of scheduled execution.
        crons:
            magento:
                spec: "*/5 * * * *"
                cmd: bash -c 'for group in $(grep -shoP "(?<=<group id=\")(.+)(?=\">)" {app,vendor}/*/*/etc/cron_groups.xml); do echo -n Running cron group ${group} --- && php -d memory_limit=-1 bin/magento cron:run --group=${group}; done'
            logrotate:
                spec: "45 1 * * *"
                cmd: shtool rotate -n10 $PLATFORM_APP_DIR/var/log/*.log
            reportcleanup:
                spec: "0 2 * * *"
                cmd: find $PLATFORM_APP_DIR/var/report/* -mtime +10 -delete
        # The configuration of app when it is exposed to the web.
        web:
            locations:
                "/":
                    # The public directory of the app, relative to its root.
                    root: "pub"
                    # The front-controller script to send non-static requests to.
                    passthru: "/index.php"
                    index:
                        - index.php
                    expires: -1
                    scripts: true
                    allow: false
                    rules:
                        ? \.(css|js|map|hbs|gif|jpe?g|png|tiff|wbmp|ico|jng|bmp|svgz|midi?|mp?ga|mp2|mp3|m4a|ra|weba|3gpp?|mp4|mpe?g|mpe|ogv|mov|webm|flv|mng|asx|asf|wmv|avi|ogx|swf|jar|ttf|eot|woff|otf|html?)$
                        :   allow: true
                "/media":
                    root: "pub/media"
                    allow: true
                    scripts: false
                    expires: 1y
                    passthru: "/get.php"
                "/static":
                    root: "pub/static"
                    allow: true
                    scripts: false
                    expires: 1y
                    passthru: "/front-static.php"
                    rules:
                        ^/static/version\d+/(?<resource>.*)$:
                            passthru: "/static/$resource"
        source:
            root: /
services:
    db:
        type: mariadb:10.6
    cache:
        type: redis:7.2
    session:
        type: redis:7.2
    indexer:
        type: opensearch:2
        configuration:
            plugins:
                - analysis-phonetic
                - analysis-icu
    queue:
        type: rabbitmq:3.13
routes:
    https://{default}/:
        type: upstream
        upstream: app:http
    https://{default}/static/:
        type: upstream
        upstream: app:http
        cache:
            enabled: true
            cookies: []
    https://{all}/:
        type: upstream
        upstream: app:http
    https://{all}/static/:
        type: upstream
        upstream: app:http
        cache:
            enabled: true
            cookies: []
